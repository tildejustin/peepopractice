plugins {
	id "fabric-loom" version "1.3-SNAPSHOT"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		url "https://jitpack.io"
	}
}

loom {
	accessWidenerPath = file("src/main/resources/peepopractice.accesswidener")
}

configurations {
	modIncludeImplementation
	include.extendsFrom modIncludeImplementation
	modImplementation.extendsFrom modIncludeImplementation
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "com.github.RedLime:SpeedRunIGT:${project.minecraft_version}-SNAPSHOT"
	modIncludeImplementation(fabricApi.module("fabric-api-base", project.fabric_version))
	modIncludeImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
	modIncludeImplementation(fabricApi.module("fabric-item-api-v1", project.fabric_version))
	modCompileOnlyApi files("lib/atum-1.1.3+1.16.1.jar", "lib/standardsettings-1.2.2+1.16.1.jar")
	include annotationProcessor(implementation("com.github.LlamaLad7:MixinExtras:${project.mixinextras_version}"))
	include implementation("org.reflections:reflections:0.9.10")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release.set(8)
}

java {
	withSourcesJar()
}
